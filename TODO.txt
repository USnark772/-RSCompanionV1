TODO:
-   Comments everywhere
-   Logging everywhere
    -   Lots of error checking
    -   Debug everywhere
-   Threading (some issues with UI lag)

At some point
-   Refactor so that all device logic (device manager messaging etc.) is in the device specific files
    Would we need to pass a reference to the device controller's respective function in?
-   Change output path to fixed and user can change it if desired but doesn't need to.
-   Give program a folder in user space instead of program files space and place config file in there.

After launch:
-   DONE Notes entered into the output files do not populate the correct column. Need more commas, 2 I believe
-   IGNORE Fix time on charts and output files so that it matches the time shown in users computers.
-   IGNORE Chart Y axes need to be set to default values VOG 0-12 seconds, DRT RT 0-2500ms, Clicks 0-3
-   DONE Experiments blocks should have lines that connect the dots in the charts. That will provide a meaningful continuation of chart data within an experiment
-   IGNORE Need to add a configuration name field to VOG and DRT for custom configuration uploads
-   DONE When the program is launched twice there is a bad error.
-   DONE Should we add a way to see app version under the help option?
-   Video integration (OpenCV? Might have some fps issues, some talk about using pygame.)
    Seems to have trouble accessing USB camera. Uses builtin webcams just fine. Need to do more searching.
    It seems Qt5 has a good implementation so far. Preliminary research shows there is a way to overlay. Consider using
    https://developer.ridgerun.com/wiki/index.php?title=Gstreamer_QT_Overlay for overlay but do more research.
-   GPS integration

Updater:
-   Automatically download latest version at users request
-   Automatically check for updates at startup if user selects that option

Installer: Inno Setup
-   DONE Make sure installer installs over previous versions of Companion app

Devices:
-   Check device/program output

Video:
-   Begin exp starts recording video. Device overlay is recorded with the video
    Device output will add a frame # for when that device output came in
    Consider OpenCV python module
    Video output will be all one video file with possibly multiple video feeds.
    Try for multiple feeds at the same time.

Graphing:
-   Design good way to calculate mean of each data type (don't worry about this for now)
    -   Let user set the bounds of the mean
    -   Put graph controls below each graph

TODO: fix these issues
-   Check for updates is not working again. Possibly due to repository being private (fixed, repo was private)
-   When scrolling, the graphs move in their canvasas (don't worry about this for now)
-   Some unexplained issues with ui sizing (Has to do with screen scaling) (don't worry about this for now)

At some point:
-   Possibly use numpy for internal data storage. (don't worry about this for now)
-   Think about how to manage licenses ( Is this software worth protecting or is it useless without our specific devices? )
    Using GPL 3.0 or later at this time.

to get stack trace
-   from traceback import print_stack
    print_stack() where you want a stacktrace
to get exceptions
-   from traceback import print_exc
    print_exc(filename)
